{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u5BFA\\u7530\\u601C\\u52A0\\\\AppData\\\\Roaming\\\\npm\\\\tictactoe\\\\practice\\\\src\\\\Game\\\\GameComponent.js\";\n// import { render } from '@testing-library/react';\nimport React from 'react'; // import ReactDOM from 'react-dom';\n\nimport '../index.css'; // import Normal from './normal';\n// import Index2 from './index2';\n// import * as serviceWorker from './serviceWorker';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SelectMath extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(25).fill(null),\n      xIsNext: true,\n      maths: null,\n      num: 0,\n      winner: null\n    };\n  }\n\n  render() {\n    // const winner = calculateWinner(this.state.squares);\n    if (this.state.winner) {\n      var status = 'Winner is: ' + this.state.winner;\n    } else {\n      var status = 'Next player: ' + (this.state.xIsNext ? this.props.player1 : this.props.player2);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"choiceBoard\",\n          className: \"status\",\n          onChange: e => this.makeBoard(e.target.value, 1),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            disabled: true,\n            selected: true,\n            children: \"\\u30DE\\u30B9\\u76EE\\u306E\\u6570\\u3092\\u9078\\u629E\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"3\",\n            children: \"\\uFF13\\xD7\\uFF13\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"4\",\n            children: \"\\uFF14\\xD7\\uFF14\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"5\",\n            children: \"\\uFF15\\xD7\\uFF15\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), this.state.maths]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n  makeBoard(selectNum, isFirst) {\n    // マス数を変更された場合は各マスの中をnullにし、winnerの中身もnullにする\n    if (isFirst) {\n      this.state.winner = null;\n      this.state.squares = Array(selectNum * selectNum).fill(null);\n    } // 選択されたマス数分のボタンを作成する\n\n\n    var mathList = [];\n\n    for (var i = 0; i < selectNum; i++) {\n      var lineList = [];\n      var k = i * selectNum;\n\n      for (var j = 0; j < selectNum; j++) {\n        lineList.push(this.renderSquare(k + j));\n      }\n\n      mathList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: lineList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this));\n    } // 作成したボタン情報をstateに状態として更新\n\n\n    this.setState({\n      maths: mathList,\n      num: selectNum\n    });\n  }\n\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"square\",\n      onClick: () => {\n        this.handleClick(i);\n        this.makeBoard(this.state.num, 0);\n      },\n      children: this.state.squares[i]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this);\n  }\n\n  handleClick(i) {\n    if (this.state.squares[i] || this.state.winner) {\n      // 既に選択されているマスの場合は処理を行わない\n      // 既ビンゴの場合も返却する\n      return;\n    } else {\n      // 白マスの場合はビンゴ判定とマスの更新を行う\n      this.state.squares[i] = this.state.xIsNext ? 'X' : 'O';\n      this.state.winner = calculateWinner(this.state.squares);\n    }\n\n    this.setState({\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n}\n\nfunction calculateWinner(squares) {\n  // 表示されているマスの列数を取得\n  const squareLine = Math.sqrt(squares.length);\n  var bingo = []; // よこビンゴのパターンを作成\n\n  var rowCount = 0;\n  var rowBingo = [];\n\n  for (var i = 0; i < squareLine; i++) {\n    rowBingo = [];\n\n    for (var j = 0; j < squareLine; j++) {\n      rowBingo.push(rowCount);\n      rowCount++;\n    }\n\n    bingo.push(rowBingo);\n  } // たてビンゴのパターンを作成\n\n\n  var columnCount = 0;\n  var columnBingo = [];\n\n  for (var i = 0; i < squareLine; i++) {\n    columnBingo = [];\n\n    for (var j = 0; j < squareLine; j++) {\n      if (j === 0) {\n        columnBingo.push(columnCount);\n      } else {\n        columnBingo.push(columnCount + squareLine * j);\n      }\n    }\n\n    columnCount++;\n    bingo.push(columnBingo);\n  } // ななめビンゴのパターンを作成１\n\n\n  var diagonalCount = 0;\n  var diagonalBingo = [];\n  diagonalBingo.push(diagonalCount);\n  var nowNumber;\n\n  for (var i = 1; i < squareLine; i++) {\n    // i=1,2,3  4の場合\n    nowNumber = diagonalCount + squareLine + 1;\n    diagonalBingo.push(nowNumber);\n    diagonalCount = nowNumber;\n  }\n\n  bingo.push(diagonalBingo); // ななめビンゴのパターンを作成２\n\n  diagonalCount = squareLine - 1;\n  diagonalBingo = [];\n  diagonalBingo.push(diagonalCount);\n\n  for (var i = 1; i < squareLine; i++) {\n    // i=1,2,3  4の場合\n    nowNumber = diagonalCount + squareLine - 1;\n    diagonalBingo.push(nowNumber);\n    diagonalCount = nowNumber;\n  }\n\n  bingo.push(diagonalBingo);\n  var bingoResult;\n\n  for (let i = 0; i < bingo.length; i++) {\n    var checkBingoLine = [];\n    var squareContent;\n\n    for (let j = 0; j < bingo[i].length; j++) {\n      squareContent = squares[bingo[i][j]];\n      checkBingoLine.push(squares[bingo[i][j]]);\n    }\n\n    bingoResult = squareContent ? checkBingoLine.some(target => target != squareContent) ? null : squareContent : null;\n\n    if (bingoResult) {\n      break;\n    }\n  }\n\n  return bingoResult;\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      player1: 'X',\n      player2: 'O'\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u30D7\\u30EC\\u30A4\\u30E4\\u30FC\\u306E\\u540D\\u524D\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u30D7\\u30EC\\u30A4\\u30E4\\u30FC\\uFF11\\u306E\\u540D\\u524D\\u3092\\u5165\\u529B\",\n          value: this.state.player1,\n          onChange: e => this.setPlayer1(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \" VS \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u30D7\\u30EC\\u30A4\\u30E4\\u30FC\\uFF12\\u306E\\u540D\\u524D\\u3092\\u5165\\u529B\",\n          value: this.state.player2,\n          onChange: e => this.setPlayer2(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SelectMath, {\n        player1: this.state.player1,\n        player2: this.state.player2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this);\n  } // 入力された値をそれぞれのプレイヤーのstateにセットする\n\n\n  setPlayer1(event) {\n    this.setState({\n      player1: event.target.value\n    });\n  }\n\n  setPlayer2(event) {\n    this.setState({\n      player2: event.target.value\n    });\n  }\n\n}\n\nclass Game extends React.Component {\n  renderBoard() {\n    return /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 12\n    }, this);\n  } // ３クラスで最初に呼ばれるのがrender()\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: this.renderBoard()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this);\n  }\n\n} // ========================================\n// １最初にここが呼ばれる\n// ReactDOM.render(\n//   <Game />,   // ２これでGameクラスが呼ばれる\n//   document.getElementById('root')\n// );\n// ReactDOM.render(\n//   <Index2 />,\n//   document.getElementById('root2')\n// );\n// // htmlにid違う要素をもう一つ書いてこうすれば同じのがもう一個出せる\n// ReactDOM.render(\n//   <Normal />,\n//   document.getElementById('root3')\n// );\n\n\nexport default Game;","map":{"version":3,"sources":["C:/Users/寺田怜加/AppData/Roaming/npm/tictactoe/practice/src/Game/GameComponent.js"],"names":["React","SelectMath","Component","constructor","props","state","squares","Array","fill","xIsNext","maths","num","winner","render","status","player1","player2","e","makeBoard","target","value","selectNum","isFirst","mathList","i","lineList","k","j","push","renderSquare","setState","handleClick","calculateWinner","squareLine","Math","sqrt","length","bingo","rowCount","rowBingo","columnCount","columnBingo","diagonalCount","diagonalBingo","nowNumber","bingoResult","checkBingoLine","squareContent","some","Board","setPlayer1","setPlayer2","event","Game","renderBoard"],"mappings":"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","sourcesContent":["// import { render } from '@testing-library/react';\nimport React from 'react';\n// import ReactDOM from 'react-dom';\nimport '../index.css';\n// import Normal from './normal';\n// import Index2 from './index2';\n// import * as serviceWorker from './serviceWorker';\n\nclass SelectMath extends React.Component{\n  constructor(props){\n    super(props);\n    this.state= {\n      squares: Array(25).fill(null),\n      xIsNext: true,\n      maths: null,\n      num: 0,\n      winner: null,\n    };\n  }\n  render(){\n    // const winner = calculateWinner(this.state.squares);\n    if(this.state.winner){\n      var status = 'Winner is: ' + (this.state.winner);\n    }else{\n      var status = 'Next player: ' + (this.state.xIsNext? this.props.player1: this.props.player2);\n    }\n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n        <div>\n          {/* e.target.valueで選択したvalueを渡している */}\n          <select id=\"choiceBoard\" className=\"status\" onChange={(e) => this.makeBoard(e.target.value, 1)}>\n            <option disabled selected>マス目の数を選択してください</option>\n            <option value=\"3\">３×３</option>\n            <option value=\"4\">４×４</option>\n            <option value=\"5\">５×５</option>\n          </select>\n          {/* これが可動式マスの部分 */}\n          {this.state.maths}\n        </div>\n      </div>\n    );\n  }\n\n  makeBoard(selectNum, isFirst){\n    // マス数を変更された場合は各マスの中をnullにし、winnerの中身もnullにする\n    if (isFirst) {\n      this.state.winner = null;\n      this.state.squares = Array(selectNum*selectNum).fill(null);\n    }\n    // 選択されたマス数分のボタンを作成する\n    var mathList = [];\n    for (var i = 0; i < selectNum; i++) {\n      var lineList = [];\n      var k = i*selectNum;\n      for (var j = 0; j < selectNum; j++) {\n        lineList.push(this.renderSquare(k+j));\n      }\n      mathList.push(<div className=\"board-row\">{lineList}</div>);\n    }\n    // 作成したボタン情報をstateに状態として更新\n    this.setState({\n      maths: mathList,\n      num: selectNum,\n    });\n  }\n\n  renderSquare(i) {\n    return (\n    <button className=\"square\" onClick={() => {this.handleClick(i); this.makeBoard(this.state.num, 0)}}>\n      {this.state.squares[i]}\n    </button>\n    )\n  }\n\n  handleClick(i) {\n    if (this.state.squares[i] || this.state.winner) {\n      // 既に選択されているマスの場合は処理を行わない\n      // 既ビンゴの場合も返却する\n      return;\n    } else {\n      // 白マスの場合はビンゴ判定とマスの更新を行う\n      this.state.squares[i] = this.state.xIsNext ? 'X' : 'O';\n      this.state.winner = calculateWinner(this.state.squares);\n    }\n    this.setState({\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n}\n\nfunction calculateWinner(squares) {\n  // 表示されているマスの列数を取得\n  const squareLine = Math.sqrt(squares.length);\n  var bingo = [];\n  // よこビンゴのパターンを作成\n  var rowCount = 0;\n  var rowBingo = [];\n  for (var i = 0; i < squareLine; i++) {\n    rowBingo = [];\n    for (var j = 0; j < squareLine; j++) {\n      rowBingo.push(rowCount);\n      rowCount++;\n    }\n    bingo.push(rowBingo);\n  }\n  // たてビンゴのパターンを作成\n  var columnCount = 0;\n  var columnBingo = [];\n  for (var i = 0; i < squareLine; i++) {\n    columnBingo = [];\n    for (var j = 0; j < squareLine; j++) {\n      if(j===0){\n        columnBingo.push(columnCount);\n      }else{\n        columnBingo.push(columnCount+squareLine*j);\n      }\n    }\n    columnCount++;\n    bingo.push(columnBingo);\n  }\n  // ななめビンゴのパターンを作成１\n  var diagonalCount = 0;\n  var diagonalBingo = [];\n  diagonalBingo.push(diagonalCount);\n  var nowNumber;\n  for(var i = 1; i < squareLine; i++){    // i=1,2,3  4の場合\n    nowNumber = diagonalCount + squareLine + 1;\n    diagonalBingo.push(nowNumber);\n    diagonalCount = nowNumber;\n  }\n  bingo.push(diagonalBingo);\n  // ななめビンゴのパターンを作成２\n  diagonalCount = squareLine - 1;\n  diagonalBingo = [];\n  diagonalBingo.push(diagonalCount);\n  for(var i = 1; i < squareLine; i++){    // i=1,2,3  4の場合\n    nowNumber = diagonalCount + squareLine - 1;\n    diagonalBingo.push(nowNumber);\n    diagonalCount = nowNumber;\n  }\n  bingo.push(diagonalBingo);\n\n  var bingoResult;\n  for (let i = 0; i < bingo.length; i++) {\n    var checkBingoLine = [];\n    var squareContent;\n    for (let j = 0; j < bingo[i].length; j++) {\n      squareContent = squares[bingo[i][j]];\n      checkBingoLine.push(squares[bingo[i][j]]);\n    }\n    bingoResult = squareContent ? (checkBingoLine.some( target => target != squareContent)? null : squareContent) : null ;\n    if(bingoResult){\n      break;\n    }\n  }\n  return bingoResult;\n}\n\n\nclass Board extends React.Component {\n  constructor(props){\n    super(props);\n    this.state= {\n      player1: 'X',\n      player2: 'O',\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <p>プレイヤーの名前を入力してください</p>\n        <div  className=\"status\">\n          <input type=\"text\" placeholder=\"プレイヤー１の名前を入力\" value={this.state.player1} onChange={(e) => this.setPlayer1(e)}></input>\n          <span> VS </span>\n          <input type=\"text\" placeholder=\"プレイヤー２の名前を入力\" value={this.state.player2} onChange={(e) => this.setPlayer2(e)}></input>\n        </div>\n        <SelectMath player1={this.state.player1} player2={this.state.player2}/>\n      </div>\n    );\n  }\n\n  // 入力された値をそれぞれのプレイヤーのstateにセットする\n  setPlayer1(event){\n    this.setState({\n      player1: event.target.value,\n    })\n  }\n  setPlayer2(event){\n    this.setState({\n      player2: event.target.value,\n    })\n  }\n}\n\nclass Game extends React.Component {\n  renderBoard(){\n    return <Board />;\n  }\n\n  // ３クラスで最初に呼ばれるのがrender()\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          {this.renderBoard()}\n        </div>\n        <div className=\"game-info\">\n          <div>{/* status */}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n// １最初にここが呼ばれる\n// ReactDOM.render(\n//   <Game />,   // ２これでGameクラスが呼ばれる\n//   document.getElementById('root')\n// );\n// ReactDOM.render(\n//   <Index2 />,\n//   document.getElementById('root2')\n// );\n// // htmlにid違う要素をもう一つ書いてこうすれば同じのがもう一個出せる\n// ReactDOM.render(\n//   <Normal />,\n//   document.getElementById('root3')\n// );\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}